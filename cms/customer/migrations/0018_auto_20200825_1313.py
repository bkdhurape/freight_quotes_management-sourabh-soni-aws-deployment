# Generated by Django 2.2.5 on 2020-08-25 13:13

import customer.models.customer
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.validations


class Migration(migrations.Migration):

    dependencies = [
        ('customer', '0017_auto_20200817_0513'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='customer',
            name='expertise',
        ),
        migrations.AddField(
            model_name='customer',
            name='contact_no_dial_code',
            field=models.CharField(default=91, max_length=4),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='company',
            field=models.ManyToManyField(db_table='customer_companies', related_name='customer_companies', to='company.Company'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='contact_no',
            field=models.CharField(default=0, max_length=12, validators=[utils.validations.ContactNumberValidation.validate_contact_no]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='customer_type',
            field=models.CharField(default=None, max_length=20),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='customer_type_other',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='designation',
            field=models.CharField(blank=True, max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='email',
            field=models.EmailField(error_messages={'required': 'Customer email required..!'}, max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='forgot_password_link',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='home_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.Company'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='home_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='country.Country'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='landline_no',
            field=models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(regex='\\d{10}')]),
        ),
        migrations.AlterField(
            model_name='customer',
            name='landline_no_dial_code',
            field=models.CharField(blank=True, max_length=4, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='name',
            field=models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(regex='^[A-Za-z]+[A-Za-z\\d\\._\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='customer',
            name='password',
            field=models.CharField(blank=True, default=None, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='registration_token',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='supervisor',
            field=models.ManyToManyField(db_table='customer_supervisors', related_name='customers', to='customer.Customer'),
        ),
    ]
